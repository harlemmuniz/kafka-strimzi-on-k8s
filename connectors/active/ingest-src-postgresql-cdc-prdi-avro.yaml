apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  # connector name
  name: ingest-src-postgresql-cdc-avro-c3118a87
  labels: 
    # kafka connect [cluster] name
    strimzi.io/cluster: connect-cluster
spec:
  class: io.debezium.connector.postgresql.PostgresConnector
  tasksMax: 2 
  config:
    ### Postgres configuration ###
    plugin.name: "pgoutput"
    slot.name: "debezium"
    publication.name: dbz_publication
    # heartbeat.interval.ms: 10000
    # heartbeat.action.query: "INSERT INTO public.debezium_heartbeat (id, updated_at) VALUES (1, NOW()) ON CONFLICT (id) DO UPDATE SET updated_at = NOW();"

    ### Schema and avro configuration ###
    key.converter: "io.confluent.connect.avro.AvroConverter"
    key.converter.schema.registry.url: "http://schema-registry-cp-schema-registry:8081"
    value.converter: "io.confluent.connect.avro.AvroConverter"
    value.converter.schema.registry.url: "http://schema-registry-cp-schema-registry:8081"

    ### Credential configurations ###
    database.hostname: "${file:/opt/kafka/external-configuration/connector-config-postgresql/connector.properties:postgres_hostname}"
    database.port: "${file:/opt/kafka/external-configuration/connector-config-postgresql/connector.properties:postgres_port}"
    database.user: "${file:/opt/kafka/external-configuration/connector-config-postgresql/connector.properties:postgres_username}"
    database.password: "${file:/opt/kafka/external-configuration/connector-config-postgresql/connector.properties:postgres_password}"
    database.dbname: "${file:/opt/kafka/external-configuration/connector-config-postgresql/connector.properties:postgres_dbname}"

    ### Initial snapshot operation ###
    snapshot.mode: initial
    snapshot.fetch.size: 50000
    incremental.snapshot.chunk.size: 10000

    #### CDC operation ###
    max.batch.size: 50000
    max.queue.size: 60000
    poll.interval.ms: 100

    #### Table and primary key ###
    table.include.list: negociacao.atendimento_pessoa,negociacao.negociacao_cobranca,negociacao.boleto_negociacao,negociacao.estado_negociacao_cobranca,negociacao.ocorrencia,negociacao.registro_ocorrencia,negociacao.operador_autoatendimento,negociacao.estado_atendimento_pessoa
    message.key.columns: "negociacao.atendimento_pessoa:id_atendimento_pessoa;negociacao.negociacao_cobranca:id_negociacao_cobranca;negociacao.boleto_negociacao:id_negociacao_cobranca;negociacao.estado_negociacao_cobranca:id_estado_negociacao_cobranca;negociacao.ocorrencia:id_ocorrencia;negociacao.registro_ocorrencia:id_registro_ocorrencia;negociacao.operador_autoatendimento:id_operador_autoatendimento;negociacao.estado_atendimento_pessoa:id_estado_atendimento_pessoa"
    topic.prefix: postgres

    ### Handling events ###
    time.precision.mode: connect
    tombstones.onâ€‹.delete: true
    decimal.handling.mode: double

    ### SMT - Simple Message Transformation ###
    transforms: "unwrap,tsConverter1,tsConverter2,tsConverter3,tsConverter4,tsConverter5,tsConverter6,tsConverter7,tsConverter8,tsConverter9,tsConverter10,tsConverter11,tsConverter12,tsConverter13,tsConverter14"

    transforms.unwrap.type: io.debezium.transforms.ExtractNewRecordState
    transforms.unwrap.drop.tombstones: false
    transforms.unwrap.delete.handling.mode: rewrite
    transforms.unwrap.add.fields: db,schema,table,lsn,ts_ms,op

    transforms.tsConverter1.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter1.format: "yyyy-MM-dd HH:mm:ss.SSS"
    transforms.tsConverter1.target.type: "string"
    transforms.tsConverter1.field: "__ts_ms"

    transforms.tsConverter2.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter2.format: "yyyy-MM-dd HH:mm:ss.SSS"
    transforms.tsConverter2.target.type: "string"
    transforms.tsConverter2.field: "ts_negociacao"

    transforms.tsConverter3.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter3.format: "yyyy-MM-dd HH:mm:ss.SSS"
    transforms.tsConverter3.target.type: "string"
    transforms.tsConverter3.field: "ts_operador_atendimento"

    transforms.tsConverter4.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter4.format: "yyyy-MM-dd HH:mm:ss.SSS"
    transforms.tsConverter4.target.type: "string"
    transforms.tsConverter4.field: "ts_atualizacao"

    transforms.tsConverter5.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter5.format: "yyyy-MM-dd"
    transforms.tsConverter5.target.type: "string"
    transforms.tsConverter5.field: "dt_primeiro_vencimento"

    transforms.tsConverter6.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter6.format: "yyyy-MM-dd"
    transforms.tsConverter6.target.type: "string"
    transforms.tsConverter6.field: "dt_promessa"

    transforms.tsConverter7.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter7.format: "yyyy-MM-dd"
    transforms.tsConverter7.target.type: "string"
    transforms.tsConverter7.field: "dt_vencimento_boleto"

    transforms.tsConverter8.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter8.format: "yyyy-MM-dd"
    transforms.tsConverter8.target.type: "string"
    transforms.tsConverter8.field: "dt_pagamento_boleto"

    transforms.tsConverter9.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter9.format: "yyyy-MM-dd HH:mm:ss.SSS"
    transforms.tsConverter9.target.type: "string"
    transforms.tsConverter9.field: "ts_estado_negociacao"

    transforms.tsConverter10.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter10.format: "yyyy-MM-dd HH:mm:ss.SSS"
    transforms.tsConverter10.target.type: "string"
    transforms.tsConverter10.field: "ts_prioriza_negociacao"

    transforms.tsConverter11.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter11.format: "yyyy-MM-dd HH:mm:ss.SSS"
    transforms.tsConverter11.target.type: "string"
    transforms.tsConverter11.field: "ts_registro_ocorrencia"

    transforms.tsConverter12.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter12.format: "yyyy-MM-dd"
    transforms.tsConverter12.target.type: "string"
    transforms.tsConverter12.field: "dt_retorno"

    transforms.tsConverter13.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter13.format: "yyyy-MM-dd"
    transforms.tsConverter13.target.type: "string"
    transforms.tsConverter13.field: "dt_pagamento"

    transforms.tsConverter14.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter14.format: "yyyy-MM-dd HH:mm:ss.SSS"
    transforms.tsConverter14.target.type: "string"
    transforms.tsConverter14.field: "ts_estado_atendimento_pessoa"